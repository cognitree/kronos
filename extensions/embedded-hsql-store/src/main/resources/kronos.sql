CREATE TABLE IF NOT EXISTS QRTZ_JOB_DETAILS
(
SCHED_NAME VARCHAR(120) NOT NULL,
JOB_NAME VARCHAR(200) NOT NULL,
JOB_GROUP VARCHAR(200) NOT NULL,
DESCRIPTION VARCHAR(250),
JOB_CLASS_NAME VARCHAR(250) NOT NULL,
IS_DURABLE BOOLEAN NOT NULL,
IS_NONCONCURRENT BOOLEAN NOT NULL,
IS_UPDATE_DATA BOOLEAN NOT NULL,
REQUESTS_RECOVERY BOOLEAN NOT NULL,
JOB_DATA VARBINARY(16000),
PRIMARY KEY(SCHED_NAME,JOB_NAME,JOB_GROUP)
);

CREATE TABLE IF NOT EXISTS QRTZ_TRIGGERS
(
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
JOB_NAME VARCHAR(200) NOT NULL,
JOB_GROUP VARCHAR(200) NOT NULL,
DESCRIPTION VARCHAR(250),
NEXT_FIRE_TIME NUMERIC(13),
PREV_FIRE_TIME NUMERIC(13),
PRIORITY INTEGER,
TRIGGER_STATE VARCHAR(16) NOT NULL,
TRIGGER_TYPE VARCHAR(8) NOT NULL,
START_TIME NUMERIC(13) NOT NULL,
END_TIME NUMERIC(13),
CALENDAR_NAME VARCHAR(200),
MISFIRE_INSTR NUMERIC(2),
JOB_DATA VARBINARY(16000),
PRIMARY KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
FOREIGN KEY(SCHED_NAME,JOB_NAME,JOB_GROUP)
REFERENCES PUBLIC.QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP)
);

CREATE TABLE IF NOT EXISTS QRTZ_SIMPLE_TRIGGERS
(
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
REPEAT_COUNT NUMERIC(7) NOT NULL,
REPEAT_INTERVAL NUMERIC(12) NOT NULL,
TIMES_TRIGGERED NUMERIC(10) NOT NULL,
PRIMARY KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
FOREIGN KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
REFERENCES PUBLIC.QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE IF NOT EXISTS QRTZ_CRON_TRIGGERS
(
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
CRON_EXPRESSION VARCHAR(120) NOT NULL,
TIME_ZONE_ID VARCHAR(80),
PRIMARY KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
FOREIGN KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
REFERENCES PUBLIC.QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE IF NOT EXISTS QRTZ_SIMPROP_TRIGGERS
(
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
STR_PROP_1 VARCHAR(512),
STR_PROP_2 VARCHAR(512),
STR_PROP_3 VARCHAR(512),
INT_PROP_1 NUMERIC(9),
INT_PROP_2 NUMERIC(9),
LONG_PROP_1 NUMERIC(13),
LONG_PROP_2 NUMERIC(13),
DEC_PROP_1 NUMERIC(13,4),
DEC_PROP_2 NUMERIC(13,4),
BOOL_PROP_1 BOOLEAN,
BOOL_PROP_2 BOOLEAN,
PRIMARY KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
FOREIGN KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
REFERENCES PUBLIC.QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE IF NOT EXISTS QRTZ_BLOB_TRIGGERS
(
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
BLOB_DATA BINARY(1),
PRIMARY KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
FOREIGN KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
REFERENCES PUBLIC.QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE IF NOT EXISTS QRTZ_CALENDARS
(
SCHED_NAME VARCHAR(120) NOT NULL,
CALENDAR_NAME VARCHAR(200) NOT NULL,
CALENDAR BINARY(1) NOT NULL,
PRIMARY KEY(SCHED_NAME,CALENDAR_NAME)
);

CREATE TABLE IF NOT EXISTS QRTZ_PAUSED_TRIGGER_GRPS
(
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
PRIMARY KEY(SCHED_NAME,TRIGGER_GROUP)
);

CREATE TABLE IF NOT EXISTS QRTZ_FIRED_TRIGGERS
(
SCHED_NAME VARCHAR(120) NOT NULL,
ENTRY_ID VARCHAR(95) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
INSTANCE_NAME VARCHAR(200) NOT NULL,
FIRED_TIME NUMERIC(13) NOT NULL,
SCHED_TIME NUMERIC(13) NOT NULL,
PRIORITY INTEGER NOT NULL,
STATE VARCHAR(16) NOT NULL,
JOB_NAME VARCHAR(200),
JOB_GROUP VARCHAR(200),
IS_NONCONCURRENT BOOLEAN,
REQUESTS_RECOVERY BOOLEAN,
PRIMARY KEY(SCHED_NAME,ENTRY_ID)
);

CREATE TABLE IF NOT EXISTS QRTZ_SCHEDULER_STATE
(
SCHED_NAME VARCHAR(120) NOT NULL,
INSTANCE_NAME VARCHAR(200) NOT NULL,
LAST_CHECKIN_TIME NUMERIC(13) NOT NULL,
CHECKIN_INTERVAL NUMERIC(13) NOT NULL,
PRIMARY KEY(SCHED_NAME,INSTANCE_NAME)
);

CREATE TABLE IF NOT EXISTS QRTZ_LOCKS
(
SCHED_NAME VARCHAR(120) NOT NULL,
LOCK_NAME VARCHAR(40) NOT NULL,
PRIMARY KEY(SCHED_NAME,LOCK_NAME)
);

CREATE TABLE IF NOT EXISTS NAMESPACES
(
NAME VARCHAR(120) NOT NULL,
DESCRIPTION VARCHAR(200),
PRIMARY KEY(NAME)
);

CREATE TABLE IF NOT EXISTS WORKFLOWS
(
NAME VARCHAR(120) NOT NULL,
NAMESPACE VARCHAR(120) NOT NULL,
DESCRIPTION VARCHAR(200),
TASKS VARCHAR(1000) NOT NULL,
PRIMARY KEY(NAME, NAMESPACE)
);

CREATE TABLE IF NOT EXISTS WORKFLOW_TRIGGERS
(
NAME VARCHAR(120) NOT NULL,
WORKFLOW_NAME VARCHAR(120) NOT NULL,
NAMESPACE VARCHAR(120) NOT NULL,
START_AT NUMERIC(13),
SCHEDULE VARCHAR(200) NOT NULL,
END_AT NUMERIC(13),
ENABLED BOOLEAN NOT NULL,
PRIMARY KEY(NAME, WORKFLOW_NAME, NAMESPACE)
);

CREATE TABLE IF NOT EXISTS JOBS
(
ID VARCHAR(120) NOT NULL,
WORKFLOW_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(120) NOT NULL,
NAMESPACE VARCHAR(120) NOT NULL,
STATUS VARCHAR(120) NOT NULL,
CREATED_AT NUMERIC(13) NOT NULL,
COMPLETED_AT NUMERIC(13),
PRIMARY KEY(ID, WORKFLOW_NAME, NAMESPACE)
);

CREATE INDEX IF NOT EXISTS JOBS_WORKFLOW_NAME_NAMESPACE_IDX on JOBS (WORKFLOW_NAME, NAMESPACE);

CREATE INDEX IF NOT EXISTS JOBS_WORKFLOW_NAME_TRIGGER_NAME_NAMESPACE_IDX on JOBS (WORKFLOW_NAME, TRIGGER_NAME, NAMESPACE);

CREATE TABLE IF NOT EXISTS TASKS
(
NAME VARCHAR(120) NOT NULL,
JOB_ID VARCHAR(120) NOT NULL,
NAMESPACE VARCHAR(120) NOT NULL,
TYPE VARCHAR(120) NOT NULL,
TIMEOUT_POLICY VARCHAR(120),
MAX_EXECUTION_TIME VARCHAR(120),
DEPENDS_ON VARCHAR(120),
PROPERTIES VARCHAR(1000),
CONTEXT VARCHAR(1000),
STATUS VARCHAR(120) NOT NULL,
STATUS_MESSAGE VARCHAR(200),
CREATED_AT NUMERIC(13) NOT NULL,
SUBMITTED_AT NUMERIC(13),
COMPLETED_AT NUMERIC(13),
PRIMARY KEY(NAME, JOB_ID, NAMESPACE)
);

CREATE INDEX IF NOT EXISTS TASKS_JOB_ID_NAMESPACE_IDX on TASKS (JOB_ID, NAMESPACE);